DROP TABLE ADMIN_RECONTACT CASCADE CONSTRAINTS;
DROP TABLE USER_CONTACT CASCADE CONSTRAINTS;
DROP TABLE USER_REPORT CASCADE CONSTRAINTS;
DROP TABLE MOVIE_RECOMMENT CASCADE CONSTRAINTS;
DROP TABLE MOVIE_COMMENT CASCADE CONSTRAINTS;
DROP TABLE ANALYSIS_GENRE CASCADE CONSTRAINTS;
DROP TABLE ANALYSIS_OFFICIALS CASCADE CONSTRAINTS;
DROP TABLE OFFICIALS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_RATED CASCADE CONSTRAINTS;
DROP TABLE MOVIE_INFO CASCADE CONSTRAINTS;
DROP TABLE MOVIE_GENRE CASCADE CONSTRAINTS;
DROP TABLE USER_RELATION CASCADE CONSTRAINTS;
DROP TABLE USER_INFO CASCADE CONSTRAINTS;
DROP TABLE USER_BASIC CASCADE CONSTRAINTS;

/**********************************/
/* Table Name: 회원 등급 */
/**********************************/
CREATE TABLE USER_BASIC(
		ID                            		VARCHAR2(15)		 NOT NULL,
		AUTH                          		NUMBER(1)		 NOT NULL,
		PERMIT                        		VARCHAR2(50)		 NULL 
);

COMMENT ON TABLE USER_BASIC is '회원 등급';
COMMENT ON COLUMN USER_BASIC.ID is 'ID';
COMMENT ON COLUMN USER_BASIC.AUTH is 'AUTH';
COMMENT ON COLUMN USER_BASIC.PERMIT is '인증코드';


/**********************************/
/* Table Name: 회원의 기본적인 정보를 저장하는 테이블 */
/**********************************/
CREATE TABLE USER_INFO(
		ID                            		VARCHAR2(15)		 NOT NULL,
		PASSWD                        		VARCHAR2(50)		 NOT NULL,
		NAME                          		VARCHAR2(30)		 NOT NULL,
		PHONE                         		VARCHAR2(15)		 NOT NULL,
		EMAIL                         		VARCHAR2(50)		 NOT NULL,
		PROFILE_IMG                   		BLOB		 NULL ,
		TOTAL_LIKES                   		NUMBER		 DEFAULT 0		 NULL ,
		TOTAL_REPORTED                		NUMBER		 DEFAULT 0		 NULL ,
		REG_DATE                      		DATE		 NOT NULL
);

COMMENT ON TABLE USER_INFO is '회원의 기본적인 정보를 저장하는 테이블';
COMMENT ON COLUMN USER_INFO.ID is 'ID';
COMMENT ON COLUMN USER_INFO.PASSWD is '비밀번호';
COMMENT ON COLUMN USER_INFO.NAME is '이름';
COMMENT ON COLUMN USER_INFO.PHONE is '전화번호';
COMMENT ON COLUMN USER_INFO.EMAIL is '이메일';
COMMENT ON COLUMN USER_INFO.PROFILE_IMG is '프로필사진';
COMMENT ON COLUMN USER_INFO.TOTAL_LIKES is '좋아요 누적';
COMMENT ON COLUMN USER_INFO.TOTAL_REPORTED is '신고받은 횟수';
COMMENT ON COLUMN USER_INFO.REG_DATE is '가입날짜';


/**********************************/
/* Table Name: 회원 친구관계 */
/**********************************/
CREATE TABLE USER_RELATION(
		ID                            		VARCHAR2(15)		 NOT NULL,
		FOLLOW                        		CLOB		 NULL ,
		FOLLOWER                      		CLOB		 NULL ,
		BLOCK                         		CLOB		 NULL 
);

COMMENT ON TABLE USER_RELATION is '회원 친구관계';
COMMENT ON COLUMN USER_RELATION.ID is '회원아이디';
COMMENT ON COLUMN USER_RELATION.FOLLOW is '팔로우';
COMMENT ON COLUMN USER_RELATION.FOLLOWER is '팔로워';
COMMENT ON COLUMN USER_RELATION.BLOCK is '차단';


/**********************************/
/* Table Name: 영화 장르 */
/**********************************/
CREATE TABLE MOVIE_GENRE(
		GENRE_NUM                     		NUMBER		 NOT NULL,
		GENRE                         		VARCHAR2(30)		 NOT NULL
);

COMMENT ON TABLE MOVIE_GENRE is '영화 장르';
COMMENT ON COLUMN MOVIE_GENRE.GENRE_NUM is '장르 코드';
COMMENT ON COLUMN MOVIE_GENRE.GENRE is '장르';


/**********************************/
/* Table Name: 영화의 기본적인 정보가 저장되는 테이블 */
/**********************************/
CREATE TABLE MOVIE_INFO(
		MOVIE_NUM                     		NUMBER		 NOT NULL,
		TITLE                         		VARCHAR2(200)		 NOT NULL,
		COUNTRY                       		VARCHAR2(50)		 NOT NULL,
		RELEASED                      		DATE		 NOT NULL,
		DIRECTOR                      		VARCHAR2(4000)		 NULL ,
		ACTORS                        		VARCHAR2(4000)		 NULL ,
		SUMMARY                       		CLOB		 NULL ,
		POSTER_IMG                    		BLOB		 NULL ,
		BANNER_IMG                    		BLOB		 NULL ,
		MAIN_GENRE                    		VARCHAR2(100)		 NOT NULL,
		SUB_GENRE                     		VARCHAR2(100)		 NULL ,
		TRAILER                       		VARCHAR2(50)		 NULL ,
		REG_DATE                      		DATE		 NOT NULL
);

COMMENT ON TABLE MOVIE_INFO is '영화의 기본적인 정보가 저장되는 테이블';
COMMENT ON COLUMN MOVIE_INFO.MOVIE_NUM is '영화번호';
COMMENT ON COLUMN MOVIE_INFO.TITLE is '영화명';
COMMENT ON COLUMN MOVIE_INFO.COUNTRY is '제작국가';
COMMENT ON COLUMN MOVIE_INFO.RELEASED is '개봉년도';
COMMENT ON COLUMN MOVIE_INFO.DIRECTOR is '감독';
COMMENT ON COLUMN MOVIE_INFO.ACTORS is '배우';
COMMENT ON COLUMN MOVIE_INFO.SUMMARY is '줄  거리';
COMMENT ON COLUMN MOVIE_INFO.POSTER_IMG is '포스터사진';
COMMENT ON COLUMN MOVIE_INFO.BANNER_IMG is '배너사진';
COMMENT ON COLUMN MOVIE_INFO.MAIN_GENRE is '메인장르';
COMMENT ON COLUMN MOVIE_INFO.SUB_GENRE is '서브장르';
COMMENT ON COLUMN MOVIE_INFO.TRAILER is '예고편코드';
COMMENT ON COLUMN MOVIE_INFO.REG_DATE is '등록날짜';


/**********************************/
/* Table Name: 사용자가 평가한 영화의 평점이 저장되는 테이블 */
/**********************************/
CREATE TABLE MOVIE_RATED(
		MOVIE_NUM                     		NUMBER		 NOT NULL,
		ID                            		VARCHAR2(15)		 NOT NULL,
		RATE                          		NUMBER(1)		 NOT NULL
);

COMMENT ON TABLE MOVIE_RATED is '사용자가 평가한 영화의 평점이 저장되는 테이블';
COMMENT ON COLUMN MOVIE_RATED.MOVIE_NUM is '영화번호';
COMMENT ON COLUMN MOVIE_RATED.ID is 'ID';
COMMENT ON COLUMN MOVIE_RATED.RATE is '평점';


/**********************************/
/* Table Name: OFFICIALS */
/**********************************/
CREATE TABLE OFFICIALS(
		OFF_NUM                       		NUMBER		 NOT NULL,
		NAME                          		VARCHAR2(100)		 NOT NULL,
		JOBS                          		VARCHAR2(20)		 NOT NULL,
		FILMOGRAP                     		CLOB		 NOT NULL,
		OFF_PHOTO                     		BLOB		 NULL 
);

COMMENT ON TABLE OFFICIALS is 'OFFICIALS';
COMMENT ON COLUMN OFFICIALS.OFF_NUM is 'OFF_NUM';
COMMENT ON COLUMN OFFICIALS.NAME is 'NAME';
COMMENT ON COLUMN OFFICIALS.JOBS is 'JOBS';
COMMENT ON COLUMN OFFICIALS.FILMOGRAP is 'FILMOGRAP';
COMMENT ON COLUMN OFFICIALS.OFF_PHOTO is 'OFF_PHOTO';


/**********************************/
/* Table Name: 사용자가 평가한 영화의 감독과 평점이 저장되는 테이블 */
/**********************************/
CREATE TABLE ANALYSIS_OFFICIALS(
		MOVIE_NUM                     		NUMBER		 NOT NULL,
		USER_ID                       		VARCHAR2(20)		 NOT NULL,
		OFF_NUM                       		NUMBER		 NOT NULL,
		RATE                          		NUMBER(1)		 NOT NULL
);

COMMENT ON TABLE ANALYSIS_OFFICIALS is '사용자가 평가한 영화의 감독과 평점이 저장되는 테이블';
COMMENT ON COLUMN ANALYSIS_OFFICIALS.MOVIE_NUM is '영화번호';
COMMENT ON COLUMN ANALYSIS_OFFICIALS.USER_ID is '평가자';
COMMENT ON COLUMN ANALYSIS_OFFICIALS.OFF_NUM is 'OFF_NUM';
COMMENT ON COLUMN ANALYSIS_OFFICIALS.RATE is '평점';


/**********************************/
/* Table Name: 사용자가 평가한 영화의 장르와 평점이 저장되는 테이블 */
/**********************************/
CREATE TABLE ANALYSIS_GENRE(
		MOVIE_NUM                     		NUMBER		 NOT NULL,
		USER_ID                       		VARCHAR2(20)		 NOT NULL,
		GENRE_NUM                     		NUMBER		 NOT NULL,
		RATE                          		NUMBER(1)		 NOT NULL
);

COMMENT ON TABLE ANALYSIS_GENRE is '사용자가 평가한 영화의 장르와 평점이 저장되는 테이블';
COMMENT ON COLUMN ANALYSIS_GENRE.MOVIE_NUM is '영화번호';
COMMENT ON COLUMN ANALYSIS_GENRE.USER_ID is '평가자';
COMMENT ON COLUMN ANALYSIS_GENRE.GENRE_NUM is '장르 코드';
COMMENT ON COLUMN ANALYSIS_GENRE.RATE is '평점';


/**********************************/
/* Table Name: 영화코멘트 */
/**********************************/
CREATE TABLE MOVIE_COMMENT(
		COMMENT_NUM                   		NUMBER		 NOT NULL,
		MOVIE_NUM                     		NUMBER		 NOT NULL,
		ID                            		VARCHAR2(15)		 NOT NULL,
		CONTENT                       		CLOB		 NOT NULL,
		LIKES                         		NUMBER		 DEFAULT 0		 NULL ,
		REG_DATE                      		DATE		 NULL 
);

COMMENT ON TABLE MOVIE_COMMENT is '영화코멘트';
COMMENT ON COLUMN MOVIE_COMMENT.COMMENT_NUM is '코멘트번호';
COMMENT ON COLUMN MOVIE_COMMENT.MOVIE_NUM is '영화번호';
COMMENT ON COLUMN MOVIE_COMMENT.ID is 'ID';
COMMENT ON COLUMN MOVIE_COMMENT.CONTENT is '코멘트내용';
COMMENT ON COLUMN MOVIE_COMMENT.LIKES is '좋아요';
COMMENT ON COLUMN MOVIE_COMMENT.REG_DATE is '등록날짜';


/**********************************/
/* Table Name: 영화코멘트 */
/**********************************/
CREATE TABLE MOVIE_RECOMMENT(
		RECOMMENT_NUM                 		NUMBER		 NOT NULL,
		COMMENT_NUM                   		NUMBER		 NOT NULL,
		CONTENT                       		CLOB		 NOT NULL,
		REG_DATE                      		DATE		 NULL 
);

COMMENT ON TABLE MOVIE_RECOMMENT is '영화코멘트';
COMMENT ON COLUMN MOVIE_RECOMMENT.RECOMMENT_NUM is '코멘트번호';
COMMENT ON COLUMN MOVIE_RECOMMENT.COMMENT_NUM is '코멘트번호';
COMMENT ON COLUMN MOVIE_RECOMMENT.CONTENT is '코멘트내용';
COMMENT ON COLUMN MOVIE_RECOMMENT.REG_DATE is '등록날짜';


/**********************************/
/* Table Name: 사용자 신고 */
/**********************************/
CREATE TABLE USER_REPORT(
		REPORT_NUM                    		NUMBER		 NOT NULL,
		ID                            		VARCHAR2(15)		 NOT NULL,
		REPORT_USER                   		VARCHAR2(15)		 NOT NULL,
		REPORT_CONTENT                		CLOB		 NOT NULL,
		REG_DATE                      		DATE		 NOT NULL
);

COMMENT ON TABLE USER_REPORT is '사용자 신고';
COMMENT ON COLUMN USER_REPORT.REPORT_NUM is '번호';
COMMENT ON COLUMN USER_REPORT.ID is 'ID';
COMMENT ON COLUMN USER_REPORT.REPORT_USER is '신고대상사용자';
COMMENT ON COLUMN USER_REPORT.REPORT_CONTENT is '신고내용';
COMMENT ON COLUMN USER_REPORT.REG_DATE is '신고날짜';


/**********************************/
/* Table Name: 고객문의 */
/**********************************/
CREATE TABLE USER_CONTACT(
		CONTACT_NUM                   		NUMBER		 NOT NULL,
		ID                            		VARCHAR2(15)		 NULL ,
		TITLE                         		VARCHAR2(1000)		 NULL ,
		CONTENT                       		CLOB		 NOT NULL,
		FILENAME                      		VARCHAR2(150)		 NULL ,
		UPLOAD_FILE                   		BLOB		 NULL ,
		REG_DATE                      		DATE		 NOT NULL,
		RECOTENTABLE                  		NUMBER(1)		 DEFAULT 0		 NULL 
);

COMMENT ON TABLE USER_CONTACT is '고객문의';
COMMENT ON COLUMN USER_CONTACT.CONTACT_NUM is '문의 번호';
COMMENT ON COLUMN USER_CONTACT.ID is 'ID';
COMMENT ON COLUMN USER_CONTACT.TITLE is '제목';
COMMENT ON COLUMN USER_CONTACT.CONTENT is '문의내용';
COMMENT ON COLUMN USER_CONTACT.FILENAME is '파일이름';
COMMENT ON COLUMN USER_CONTACT.UPLOAD_FILE is '업로드파일';
COMMENT ON COLUMN USER_CONTACT.REG_DATE is '문의날짜';
COMMENT ON COLUMN USER_CONTACT.RECOTENTABLE is '답변여부';


/**********************************/
/* Table Name: 문의답변 */
/**********************************/
CREATE TABLE ADMIN_RECONTACT(
		RECONTACT_NUM                 		NUMBER		 NULL ,
		CONTACT_NUM                   		NUMBER		 NULL ,
		TITLE                         		VARCHAR2(1000)		 NULL ,
		RECONTENT                     		CLOB		 NOT NULL,
		REG_DATE                      		DATE		 NULL ,
		FILENAME                      		VARCHAR2(150)		 NULL ,
		UPLOAD_FILE                   		BLOB		 NULL 
);

COMMENT ON TABLE ADMIN_RECONTACT is '문의답변';
COMMENT ON COLUMN ADMIN_RECONTACT.RECONTACT_NUM is '답변번호';
COMMENT ON COLUMN ADMIN_RECONTACT.CONTACT_NUM is '문의 번호';
COMMENT ON COLUMN ADMIN_RECONTACT.TITLE is '답변제목';
COMMENT ON COLUMN ADMIN_RECONTACT.RECONTENT is '답변내용';
COMMENT ON COLUMN ADMIN_RECONTACT.REG_DATE is '답변날짜';
COMMENT ON COLUMN ADMIN_RECONTACT.FILENAME is '파일이름';
COMMENT ON COLUMN ADMIN_RECONTACT.UPLOAD_FILE is '업로드 파일';



ALTER TABLE USER_BASIC ADD CONSTRAINT IDX_USER_BASIC_PK PRIMARY KEY (ID);

ALTER TABLE USER_INFO ADD CONSTRAINT IDX_USER_INFO_PK PRIMARY KEY (ID);
ALTER TABLE USER_INFO ADD CONSTRAINT IDX_USER_INFO_FK0 FOREIGN KEY (ID) REFERENCES USER_BASIC (ID);

ALTER TABLE USER_RELATION ADD CONSTRAINT IDX_USER_RELATION_PK PRIMARY KEY (ID);
ALTER TABLE USER_RELATION ADD CONSTRAINT IDX_USER_RELATION_FK0 FOREIGN KEY (ID) REFERENCES USER_INFO (ID);

ALTER TABLE MOVIE_GENRE ADD CONSTRAINT IDX_MOVIE_GENRE_PK PRIMARY KEY (GENRE_NUM);

ALTER TABLE MOVIE_INFO ADD CONSTRAINT IDX_MOVIE_INFO_PK PRIMARY KEY (MOVIE_NUM);

ALTER TABLE MOVIE_RATED ADD CONSTRAINT IDX_MOVIE_RATED_FK0 FOREIGN KEY (MOVIE_NUM) REFERENCES MOVIE_INFO (MOVIE_NUM);
ALTER TABLE MOVIE_RATED ADD CONSTRAINT IDX_MOVIE_RATED_FK1 FOREIGN KEY (ID) REFERENCES USER_INFO (ID);

ALTER TABLE OFFICIALS ADD CONSTRAINT IDX_OFFICIALS_PK PRIMARY KEY (OFF_NUM);

ALTER TABLE ANALYSIS_OFFICIALS ADD CONSTRAINT IDX_ANALYSIS_OFFICIALS_FK0 FOREIGN KEY (OFF_NUM) REFERENCES OFFICIALS (OFF_NUM);
ALTER TABLE ANALYSIS_OFFICIALS ADD CONSTRAINT IDX_ANALYSIS_OFFICIALS_FK1 FOREIGN KEY (MOVIE_NUM) REFERENCES MOVIE_INFO (MOVIE_NUM);

ALTER TABLE ANALYSIS_GENRE ADD CONSTRAINT IDX_ANALYSIS_GENRE_FK0 FOREIGN KEY (GENRE_NUM) REFERENCES MOVIE_GENRE (GENRE_NUM);
ALTER TABLE ANALYSIS_GENRE ADD CONSTRAINT IDX_ANALYSIS_GENRE_FK1 FOREIGN KEY (MOVIE_NUM) REFERENCES MOVIE_INFO (MOVIE_NUM);

ALTER TABLE MOVIE_COMMENT ADD CONSTRAINT IDX_MOVIE_COMMENT_PK PRIMARY KEY (COMMENT_NUM);
ALTER TABLE MOVIE_COMMENT ADD CONSTRAINT IDX_MOVIE_COMMENT_FK0 FOREIGN KEY (MOVIE_NUM) REFERENCES MOVIE_INFO (MOVIE_NUM);
ALTER TABLE MOVIE_COMMENT ADD CONSTRAINT IDX_MOVIE_COMMENT_FK1 FOREIGN KEY (ID) REFERENCES USER_INFO (ID);

ALTER TABLE MOVIE_RECOMMENT ADD CONSTRAINT IDX_MOVIE_RECOMMENT_PK PRIMARY KEY (RECOMMENT_NUM);
ALTER TABLE MOVIE_RECOMMENT ADD CONSTRAINT IDX_MOVIE_RECOMMENT_FK0 FOREIGN KEY (COMMENT_NUM) REFERENCES MOVIE_COMMENT (COMMENT_NUM);

ALTER TABLE USER_REPORT ADD CONSTRAINT IDX_USER_REPORT_PK PRIMARY KEY (REPORT_NUM);
ALTER TABLE USER_REPORT ADD CONSTRAINT IDX_USER_REPORT_FK0 FOREIGN KEY (ID) REFERENCES USER_INFO (ID);

ALTER TABLE USER_CONTACT ADD CONSTRAINT IDX_USER_CONTACT_PK PRIMARY KEY (CONTACT_NUM);
ALTER TABLE USER_CONTACT ADD CONSTRAINT IDX_USER_CONTACT_FK0 FOREIGN KEY (ID) REFERENCES USER_INFO (ID);

ALTER TABLE ADMIN_RECONTACT ADD CONSTRAINT IDX_ADMIN_RECONTACT_PK PRIMARY KEY (RECONTACT_NUM);
ALTER TABLE ADMIN_RECONTACT ADD CONSTRAINT IDX_ADMIN_RECONTACT_FK0 FOREIGN KEY (CONTACT_NUM) REFERENCES USER_CONTACT (CONTACT_NUM);

